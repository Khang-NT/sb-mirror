name: docker-ci

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  docker:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare parameters for sb-mirror
        id: prep-mirror
        run: |
          DOCKER_IMAGE=mchangrh/sb-mirror
          VERSION=latest
          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          
          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
      - name: Prepare parameters for server-runner
        id: prep-server-runner
        run: |
          DOCKER_IMAGE=mchangrh/sb-server-runner
          VERSION=latest
          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          
          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
      - name: Prepare parameters for rsync
        id: prep-rsync
        run: |
          DOCKER_IMAGE=mchangrh/rsync
          VERSION=latest
          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          
          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build sb-mirror
        uses: docker/build-push-action@v2
        with:
          context: ./build/sb-mirror
          file: ./build/sb-mirror/Dockerfile
          push: true
          tags: ${{ steps.prep-mirror.outputs.tags }}
      - name: Build sb-server-runner
        uses: docker/build-push-action@v2
        with:
          context: ./build/rsync
          file: ./build/rsync/Dockerfile
          push: true
          tags: ${{ steps.prep-rsync.outputs.tags }}